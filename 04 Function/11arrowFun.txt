No this, super, arguments, and new.target bindings
Cannot be called with new Arrow functions do not have a [[Construct]]
method and therefore cannot be used as constructors. Arrow functions
throw an error when used with new.
No prototype Because you can’t use new on an arrow function, there’s
no need for a prototype. The prototype property of an arrow function
doesn’t exist

Can’t change this The value of this inside the function can’t be
changed. It remains the same throughout the entire life cycle of the
function.
No arguments object Because arrow functions have no arguments binding, 
you must rely on named and rest parameters to access function
arguments.
No duplicate named parameters Arrow functions cannot have duplicate named 
parameters in strict or non-strict mode, as opposed to nonarrow functions,
which cannot have duplicate named parameters only in strict mode.


Arrow functions also have a name property that follows the same rule as other
functions.